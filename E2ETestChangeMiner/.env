DATABASE_PATH=..\E2EGit.db
CSV_OUTPUT_DIR=.\output\
GIT_REPO_DIR=.\git_repo\
DB_REPORT_PATH=..\output.db


QUERY_GET_ALL_TESTING='SELECT gTT.repository_name,gTT.test_path
FROM gui_testing_test_details AS gTT
JOIN gui_testing_repo_details AS guiT
    ON guiT.repository_name = gTT.repository_name
WHERE guiT.number_files_selenium_java > 0
ORDER BY guiT.number_files_selenium_java desc
'

CREATE_TABLE_REPO="create table if not exists repository(
    repository_name TEXT PRIMARY KEY,
    total_commit INTEGER
)
"
INSERT_INTO_REPO="INSERT INTO repository (
                    repository_name, total_commit
                ) VALUES (?,?);"

CREATE_TABLE_CHANGES="CREATE TABLE IF NOT EXISTS changes (
            repository_name TEXT,
            commit_id TEXT,
            commit_date TEXT,
            commit_title TEXT,
            full_message TEXT,
            delta TEXT,
            modified_file TEXT,
            file_change_type TEXT,
            change_type TEXT,
            method_name TEXT,
            old_name TEXT,
            new_name TEXT,
            statements_removed TEXT,
            statements_added TEXT,
            statements_modified TEXT,
            before_selector TEXT,
            after_selector TEXT,
            FOREIGN KEY (repository_name) REFERENCES repository(repository_name) ON DELETE CASCADE
        );"

INSERT_INTO_CHANGES="INSERT INTO changes (
                    repository_name, commit_id, commit_date, commit_title, full_message, delta, modified_file,
                    file_change_type, change_type, method_name, old_name, new_name,
                    statements_removed, statements_added, statements_modified, before_selector, after_selector
                ) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);"

QUERY_FIND_REPOSITORY_BY_NAME="SELECT * FROM repository WHERE repository_name = ?"
QUERY_UPDATE_REPOSITORY_TOTAL_COMMIT="UPDATE repository SET total_commit = ? WHERE repository_name = ?"